// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

//can have different generators at once
//like for eg, another graphql generator
generator client {
  provider = "prisma-client-js"
}

//can only have one db as prisma is directly connecting to it
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  name           String
  //nameoffield typeoffield optional-modifier optional-attributes-starting with @
  email          String
  isAdmin        Boolean
  // imgData    Unsupported("")
  //when taking any existing databases that are unsupported by prisma
  role           Role            @default(BASIC)
  //one User - multiple posts - one to many relationships
  writtenPosts   Post[]          @relation("WrittenPosts")
  //available modifiers =>  ?  - optional, [] - many
  favoritePosts  Post[]          @relation("FavoritePosts")
  //when there are 2 references for the exact same table, need to give a relationship name
  userPreference UserPreference?

  //creating an index using email field
  @@index([email])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Post {
  id            String     @id @default(uuid())
  rating        Float
  //automatically sets the time at creation to this
  createdAt     DateTime   @default(now())
  //automatically updates this value
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favoritedBy   User?      @relation("FavoritePosts", fields: [favoritedById], references: [id])
  favoritedById String?
  categories    Category[]

  //@@id([author,rating]) - create id by combining 2 fields
}

model Category {
  id    String @id @default(uuid())
  //posts and categories have a many to many relationship
  //no need to mention anything other than this, in the involved models
  posts Post[]
}

enum Role {
  BASIC
  ADMIN
}
